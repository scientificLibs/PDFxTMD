name: Build Python Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04, macos-14]
        python-version: ["3.12"]
      fail-fast: false

    env:
      CIBW_SKIP: cp27-* cp33-* cp34-* cp35-* cp36-* cp37-*
      CIBW_OUTPUT_DIR: wheelhouse
      CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
      CIBW_ARCHS_LINUX: auto
      CIBW_ARCHS_MACOS: arm64
      CIBW_ARCHS_WINDOWS: auto
      CIBW_BEFORE_BUILD_LINUX: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release && cmake --build build
      CIBW_BEFORE_BUILD_MACOS: |
        rm -rf build &&
        cmake -S . -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_BUILDING_WRAPPERS=OFF \
          -CMAKE_OSX_ARCHITECTURES=arm64 \
          -CMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
          -DCMAKE_CXX_STANDARD=17 \
          -DCMAKE_INSTALL_PREFIX=build/install \
        && cmake --build build --config Release \
        && cmake --install build
      CIBW_BUILD_VERBOSITY: 1
      CIBW_ENVIRONMENT: HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1 MACOSX_DEPLOYMENT_TARGET=11.0
      CIBW_ENVIRONMENT_MACOS: CXXFLAGS="-std=c++17 -mmacosx-version-min=11.0" LDFLAGS="-mmacosx-version-min=11.0"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.21.3

      - name: Install macOS dependencies (macOS only)
        if: matrix.os == 'macos-14'
        run: |
          brew install cmake libyaml || true
          brew link --overwrite cmake
          cmake --version

      - name: Set up QEMU for Linux aarch64 (Ubuntu only)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          docker run --rm --privileged docker.io/tonistiigi/binfmt:latest --install all

      - name: Install Rosetta for macOS cross-compilation (macOS only)
        if: matrix.os == 'macos-14'
        run: |
          softwareupdate --install-rosetta --agree-to-license || true

      - name: Build wheels
        run: |
          python -m cibuildwheel --platform ${{ matrix.os == 'windows-2022' && 'windows' || matrix.os == 'ubuntu-22.04' && 'linux' || 'macos' }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-wheels
          path: wheelhouse/*.whl
